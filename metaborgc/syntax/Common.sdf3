module Common

lexical syntax

  ID             = [a-zA-Z] [a-zA-Z0-9]* 
  INT            = "-"? [0-9]+ 
  STRING         = "\"" StringChar* "\"" 
  StringChar     = ~[\"\n] 
  StringChar     = "\\\"" 
  StringChar     = BackSlashChar 
  BackSlashChar  = "\\" 
  LAYOUT         = [\ \t\n\r] 
  CommentChar    = [\*] 
  LAYOUT         = "/*" InsideComment* "*/" 
  InsideComment  = ~[\*] 
  InsideComment  = CommentChar 
  LAYOUT         = "//" ~[\n\r]* NewLineEOF 
  Comment		= LAYOUT
  NewLineEOF     = [\n\r] 
  NewLineEOF     = EOF 
  EOF            =  
  Comma 		 = [\,]
  Sign 			 = [\+\-]

lexical restrictions

  // Ensure greedy matching for lexicals
  
  CommentChar   -/- [\/]
  INT           -/- [0-9]
  ID            -/- [a-zA-Z0-9\_]
  
  // EOF may not be followed by any char
  
  EOF           -/- ~[]
  
  // Backslash chars in strings may not be followed by " 
  
  BackSlashChar -/- [\"]

context-free restrictions

  // Ensure greedy matching for comments
  
  LAYOUT? -/- [\ \t\n\r]
  LAYOUT? -/- [\/].[\/]
  LAYOUT? -/- [\/].[\*]
  
lexical syntax
	ID = Keyword {reject}
	Keyword = "auto"     
	Keyword = "break"    
	Keyword = "case"     
	Keyword = "char"     
	Keyword = "const"    
	Keyword = "continue" 
	Keyword = "default"  
	Keyword = "do"       
	Keyword = "double"   
	Keyword = "else"     
	Keyword = "enum"     
	Keyword = "extern"   
	Keyword = "float"    
	Keyword = "for"      
	Keyword = "goto"     
	Keyword = "if"       
	Keyword = "inline"   
	Keyword = "int"      
	Keyword = "long"     
	Keyword = "register" 
	Keyword = "return"   
	Keyword = "short"    
	Keyword = "signed"   
	Keyword = "sizeof"   
	Keyword = "static"   
	Keyword = "struct"   
	Keyword = "switch"   
	Keyword = "typedef"  
	Keyword = "union"    
	Keyword = "unsigned" 
	Keyword = "void"     
	Keyword = "volatile" 
	Keyword = "while"    
	
	Keyword = "_Alignas"       
	Keyword = "_Alignof"       
	Keyword = "_Atomic"        
	Keyword = "_Bool"          
	Keyword = "_Complex"       
	Keyword = "_Generic"       
	Keyword = "_Imaginary"     
	Keyword = "_Noreturn"      
	Keyword = "_Static_assert" 
	Keyword = "_Thread_local"   
