lexical syntax // Layout & Comments

	[\ \t\n\r\12]                   -> LAYOUT
	"/*" ( ~[\*] | Asterisk )* "*/" -> Comment
	Comment                         -> LAYOUT
	[\*]                            -> Asterisk
	"//" ~[\n]* [\n]                -> Comment
	
	-> EOF

lexical restrictions

	Asterisk -/- [\/]
	EOF      -/- ~[]

context-free restrictions
  
	LAYOUT? -/- [\ \t\n\r\12]
	LAYOUT? -/- [\/].[\/]
	LAYOUT? -/- [\/].[\*]
	

lexical syntax // Common

	[\,]   -> Comma
	[\+\-] -> Sign
	

lexical syntax // Identifiers

	([a-zA-Z\_]|UniCharName) ([a-zA-Z\_0-9]|UniCharName)* -> Id
	Keyword                                               -> Id {reject}
	
lexical restrictions
  
	Id -/- [a-zA-Z\_0-9]


lexical syntax // Universal character names

	"\\u" HexQuad                       -> UniCharName
	"\\U" HexQuad HexQuad               -> UniCharName
	
	HexDigit HexDigit HexDigit HexDigit -> HexQuad
	
templates // Constants

	Constant.CharConst   = <<CharConst>>
	Constant.IntConst    = <<IntConst>>
	Constant.OctConst    = <<OctConst>>
	Constant.HexConst    = <<HexConst>>
	Constant.FloatConst  = <<FloatConst>>
	Constant.StringConst = <<StringConst>>

lexical syntax // Integer constant

	// TODO: IntSuffix should be in AST.
	NonzeroDigit Digit* IntSuffix? -> IntConst
	Zero IntSuffix?                -> IntConst
	
	UnsingedSuffix LongSuffix?    -> IntSuffix
	UnsignedSuffix LongLongSuffix -> IntSuffix
	LongSuffix UnsigedSuffix?     -> IntSuffix
	LongLongSuffix UnsigedSuffix? -> IntSuffix
	
	[uU] -> UnsignedSuffix
	[lL] -> LongSuffix
	"ll" -> LongLongSuffix
	"LL" -> LongLongSuffix
	
	[0-9] -> Digit
	[1-9] -> NonzeroDigit
	[0]   -> Zero
	
	Digit+ -> DigitSeq
	
lexical restrictions

	IntConst -/- [0-9ulUL]

	
lexical syntax // Octal constant

	[0] [0-7]+ -> OctConst
	
lexical restrictions

	OctConst -/- [0-7]

	
lexical syntax // Hexadecimal constants

	"0" HexPrefix HexDigit -> HexConst
	HexConst HexDigit  -> HexConst
	
	[Xx] -> HexPrefix
	
	// TODO: Sign should be in AST.
	[pP] Sign? DigitSeq -> BinExpPart
	
	[0-9a-fA-F] -> HexDigit
	
	HexDigit+ -> HexDigitSeq

lexical restrictions

	HexConst  -/- [0-9a-fA-FxX]
	

lexical syntax // Float constants

	DecFloatConst -> FloatConst
	HexFloatConst -> FloatConst
	
	// TODO: ExpPart & FloatSuffix should be in AST.
	FracConst ExpPart? FloatSuffix? -> DecFloatConst
	DigitSeq ExpPart FloatSuffix?   -> DecFloatConst
	
	DigitSeq? "." DigitSeq -> FracConst
	DigitSeq "."           -> FracConst
	
	// TODO: Sign should be in AST.
	[eE] Sign? DigitSeq -> ExpPart
	
	// TODO: BinExpPart & FloatSuffix should be in AST.
	HexPrefix HexFracConst BinExpPart FloatSuffix? -> HexFloatConst
	HexPrefix HexDigitSeq BinExpPart FloatSuffix?  -> HexFloatConst
	
	HexDigitSeq? "." HexDigitSeq -> HexFracConst
	HexDigitSeq "."              -> HexFracConst
	
	[flFL] -> FloatSuffix
	
lexical restrictions

	FloatConst -/- [0-9a-fA-FxXflFL]


lexical syntax // Escape sequences
	
	SimpleEscSeq -> EscSeq
	OctEscSeq    -> EscSeq
	HexEscSeq    -> EscSeq
	UniCharName  -> EscSeq
	
	[\\] [abfnrtv\\\?\"] -> SimpleEscSeq
	
	[\\] OctDigit OctDigit? OctDigit? -> OctEscSeq
	
	[\\] "x" HexDigit+ -> HexEscSeq


lexical syntax // Character constant
	
	// TODO: CharPrefix should be in AST.
	[LuU]? "'" Char+ "'" -> CharConst
	
	~[\\\'\n] -> Char
	EscSeq    -> Char


lexical syntax // String constant

	// TODO: EncPrefix should be in AST.
	EncPrefix? "\"" SChar* "\"" -> StringConst
	
	"u8"  -> EncPrefix
	[uUL] -> EncPrefix
	
	~[\\\"\n] -> SChar
	EscSeq    -> SChar
	